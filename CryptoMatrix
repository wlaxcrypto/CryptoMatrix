import requests
import pandas as pd
import matplotlib.pyplot as plt

class CryptoMatrix:
    def __init__(self):
        self.coingecko_api_url = 'https://api.coingecko.com/api/v3/'

    def get_crypto_price(self, crypto_id: str, currency: str = 'usd') -> dict:
        url = f"{self.coingecko_api_url}simple/price"
        params = {
            'ids': crypto_id,
            'vs_currencies': currency
        }
        response = requests.get(url, params=params)
        data = response.json()
        return data

    def get_historical_prices(self, crypto_id: str, currency: str = 'usd', days: int = 30) -> pd.DataFrame:
        url = f"{self.coingecko_api_url}coins/{crypto_id}/market_chart"
        params = {
            'vs_currency': currency,
            'days': days
        }
        response = requests.get(url, params=params)
        data = response.json()
        prices = data['prices']
        df = pd.DataFrame(prices, columns=['timestamp', 'price'])
        df['timestamp'] = pd.to_datetime(df['timestamp'], unit='ms')
        df.set_index('timestamp', inplace=True)
        return df

    def get_market_data(self, crypto_id: str) -> dict:
        url = f"{self.coingecko_api_url}coins/{crypto_id}"
        response = requests.get(url)
        data = response.json()
        return data

    def plot_historical_prices(self, crypto_id: str, currency: str = 'usd', days: int = 30):
        df = self.get_historical_prices(crypto_id, currency, days)
        if df.empty:
            print("No historical price data found.")
            return
        
        plt.figure(figsize=(12, 6))
        plt.plot(df.index, df['price'], marker='o', linestyle='-')
        plt.title(f'{crypto_id.capitalize()} Price Over Last {days} Days')
        plt.xlabel('Date')
        plt.ylabel(f'Price ({currency.upper()})')
        plt.grid(True)
        plt.show()

# Example Usage
if __name__ == "__main__":
    crypto_matrix = CryptoMatrix()

    # Fetch and Display Current Crypto Price
    crypto_id = 'bitcoin'  # Example: 'bitcoin', 'ethereum'
    price_data = crypto_matrix.get_crypto_price(crypto_id)
    print(f"Current Price Data for {crypto_id.capitalize()}:")
    print(price_data)

    # Fetch and Display Historical Prices
    crypto_matrix.plot_historical_prices(crypto_id, days=30)
